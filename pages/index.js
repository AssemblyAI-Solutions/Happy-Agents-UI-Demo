import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react'

import logo from '../public/yuma-logo.png'
import Summary from '../components/summary'
import Audio from '../components/audio'
import Transcript from '../components/transcript'
import Button from '../components/button'
import QA from '../components/qa'
import Coach from '../components/coach'

export default function Home() {
  const [selectedTranscript, setSelectedTranscript] = useState(1);
  const [showBullets, setShowBullets] = useState(false);
  const [transcripts, setTranscripts] = useState([]);
  const [transcript, setTranscript] = useState({});

  useEffect(() => {
    getTranscripts()
  }, [])

  function generateTabs() {
    var buttons = []
    for(var x = 1; x < transcripts.length + 1; x++) {
      buttons.push(<Button name={transcripts[x-1].file_name} id={x} on={selectedTranscript == x} click={(id) => clickTab(id)}></Button>)
    }
    return buttons
  }

  function clickTab(id) {
    setSelectedTranscript(id)
    getTranscriptID(transcripts[id-1].transcript_id)
  }

  function getTranscripts() {
    const options = { method: 'GET' };
    fetch('/api/transcripts', options)
    .then(response => response.json())
    .then(response => {
      setTranscripts(response.data);
      if (response.data.length > 0) {
        getTranscriptID(response.data[selectedTranscript-1].transcript_id);
      }
    })
    .catch(err => console.error(err));
  }

  function getTranscriptID(id) {
    const options = { method: 'GET' };
    fetch('/api/get_assembly_transcript?id=' + id, options)
    .then(response => response.json())
    .then(response => {
      console.log(response)
      setTranscript(response)
    })
    .catch(err => console.error(err));
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Yuma Energy Demo - LeMUR Demo</title>
        <meta name="description" content="Generated by AssemblyAI Solutions" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {transcripts && transcripts.length > 0 && transcript && transcript.status && <main className={styles.main}>
        <div style={{flexDirection: 'row', display: 'flex', alignItems: 'center', justifyContent: 'space-between', paddingLeft: 40, paddingRight: 30, marginTop: 20}}>
        <div style={{display: 'flex', alignItems: 'center', paddingTop: 20, marginBottom: 20}}>
        <Image src={logo} height={100}/>
        </div>

        </div>
        <div className={styles.mainContainer}>
          <div>
          <ul className={styles.tabs}>
            {generateTabs()}
          </ul>
          </div>
          <div className={styles.column}>
          {transcripts[selectedTranscript-1].url && <Audio selected={selectedTranscript} url={transcripts[selectedTranscript-1].url}></Audio>}
            {<Transcript json={transcript}></Transcript>}
            {<Coach feedback={transcripts[selectedTranscript-1].coaching || ''}></Coach>}
          </div>
          <div className={styles.column2}>
            <div className={styles.column3}>
            {<Summary json={transcript} summary={transcripts[selectedTranscript-1].basic_summary || ''} topic_summary={transcripts[selectedTranscript-1].custom_summary || ''} showBullets={showBullets} showBulletsClick={() => setShowBullets(!showBullets)}></Summary>}
            {<QA question_answers={transcripts[selectedTranscript-1].question_answers || ''}></QA>}
            </div>
            <div className={styles.column3}>
            </div>
          </div>
        </div>
      </main>}
      <footer className={styles.footer}>
      </footer>
    </div>
  )
}